---

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - 'master'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'
  release:
    types:
      - 'created'
  schedule:
    # Every sunday at 01:10
    - cron: '10 1 * * 0'

name: 🔍 Continuous integration

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: ['dev', 'k8s']
        os_version: ['alpine']
    steps:
      - name: 📦 Install goss
        uses: e1himself/goss-installation-action@v1.1.0

      - name: 📦 Check out the codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🌎 Set environment variables
        env:
          IMAGE_NAMESPACE: wayofdev/nginx
          TEMPLATE: ${{ matrix.build_type }}-${{ matrix.os_version }}
        run: |
          export RELEASE_VERSION="${GITHUB_REF#refs/*/}" \
          && { \
            echo "IMAGE_NAMESPACE=${IMAGE_NAMESPACE}"; \
            echo "TEMPLATE=${TEMPLATE}"; \
            echo "VERSION=${RELEASE_VERSION:1}"; \
          } >> "$GITHUB_ENV"

      - name: 🤖 Generate dist files
        run: make generate

      - name: 🐳 Define docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAMESPACE }}
          tags: |
            type=raw,event=branch,value=latest
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=false
            prefix=${{ matrix.build_type }}-${{ matrix.os_version }}-

      - name: 🔑 Login to docker-hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      ### For Cross Platform OSX builds uncomment these lines
      - name: 🖥️ Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: 🚀 Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: 🏷️ Set tag for docker release image
        if: success() && startsWith(github.ref, 'refs/tags/')
        run: |
          echo "IMAGE_TAG=${{ env.IMAGE_NAMESPACE }}:${{ env.TEMPLATE }}-${{ env.VERSION }}" >> "$GITHUB_ENV"

      - name: 🏷️ Set tag for docker master image
        if: success() && ! startsWith(github.ref, 'refs/tags/')
        run: |
          echo "IMAGE_TAG=${{ env.IMAGE_NAMESPACE }}:${{ env.TEMPLATE }}-latest" >> "$GITHUB_ENV"

      - name: 🛠️ Build and export to docker
        uses: docker/build-push-action@v3
        with:
          context: ./dist/${{ env.TEMPLATE }}
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.IMAGE_TAG }}
          cache-to: type=inline
          labels: ${{ steps.meta.outputs.labels }}

      - name: 🧪 Test docker image
        run: |
          export IMAGE_TAG=${{ env.IMAGE_TAG }}; make test

      - name: 📤 Push docker image
        uses: docker/build-push-action@v4
        with:
          context: ./dist/${{ env.TEMPLATE }}
          ### For Cross Platform OSX builds uncomment these lines
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=${{ env.IMAGE_TAG }}
          cache-to: type=inline

...
